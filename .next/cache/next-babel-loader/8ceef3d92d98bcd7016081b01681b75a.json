{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { handleActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\nimport { produce } from 'immer';\nimport { combineEpics } from 'redux-observable';\nimport { ofType, catchError, switchMap, of } from 'storejars-react-toolkit/dist/operators';\nimport { Actions, entitiesMeta, entities, responder, metas } from 'storejars-react-toolkit';\nimport { api, tokenStorage } from '../helpers';\nimport namespaces from '../namespaces';\nexport var action = new Actions(namespaces.USERS);\nexport var selector = createSelector(entities, function (state) {\n  return state.users;\n});\nexport var metaSelector = createSelector(entitiesMeta, function (state) {\n  return state.users;\n});\nexport var reducer = handleActions(_defineProperty({}, action.read.success, function (state, action$) {\n  return produce(state, function (draft) {\n    draft.data = action$.payload;\n    return draft;\n  });\n}), {\n  data: []\n});\nexport var metaReducer = metas(action);\n\nfunction createEpic(action$, store$) {\n  return action$.pipe(ofType(action.create.loading), switchMap(function (_ref) {\n    var payload = _ref.payload;\n    return api.post$('/users', payload).pipe(switchMap(function (_ref2) {\n      var response = _ref2.response;\n      tokenStorage.set(response.data);\n      return of(action.createAction(response.data).success);\n    }), catchError(function (_ref3) {\n      var response = _ref3.response;\n      return of(action.createAction(responder(response)).error);\n    }));\n  }));\n}\n\nfunction readEpic(action$) {\n  return action$.pipe(ofType(action.read.loading), switchMap(function (_ref4) {\n    var payload = _ref4.payload;\n    return api.get$('/users').pipe(switchMap(function (_ref5) {\n      var response = _ref5.response;\n      return of(action.readAction(response.data).success);\n    }), catchError(function (_ref6) {\n      var response = _ref6.response;\n      return of(action.readAction(responder(response)).error);\n    }));\n  }));\n}\n\nfunction deleteEpic(action$) {\n  return action$.pipe(ofType(action.read.loading), switchMap(function (_ref7) {\n    var payload = _ref7.payload;\n    return api.post$('/users', payload).pipe(switchMap(function (_ref8) {\n      var response = _ref8.response;\n      return of(action.readAction(response.data).success);\n    }), catchError(function (_ref9) {\n      var response = _ref9.response;\n      return of(action.readAction(responder(response)).error);\n    }));\n  }));\n}\n\nexport var epic = combineEpics(readEpic, createEpic, deleteEpic);","map":{"version":3,"sources":["/Users/macbook/Documents/projects/classydrive/classydrive-web/site/src/redux/entities/users.ts"],"names":["handleActions","createSelector","produce","combineEpics","ofType","catchError","switchMap","of","Actions","entitiesMeta","entities","responder","metas","api","tokenStorage","namespaces","action","USERS","selector","state","users","metaSelector","reducer","read","success","action$","draft","data","payload","metaReducer","createEpic","store$","pipe","create","loading","post$","response","set","createAction","error","readEpic","get$","readAction","deleteEpic","epic"],"mappings":";AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,EAAwCC,EAAxC,QAAkD,wCAAlD;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,QAAhC,EAA0CC,SAA1C,EAAqDC,KAArD,QAAkE,yBAAlE;AAEA,SAASC,GAAT,EAAcC,YAAd,QAAkC,YAAlC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,IAAMC,MAAM,GAAG,IAAIR,OAAJ,CAAYO,UAAU,CAACE,KAAvB,CAAf;AAEP,OAAO,IAAMC,QAAQ,GAAGjB,cAAc,CAACS,QAAD,EAAW,UAACS,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAjB;AAAA,CAAX,CAA/B;AACP,OAAO,IAAMC,YAAY,GAAGpB,cAAc,CAACQ,YAAD,EAAe,UAACU,KAAD;AAAA,SAAWA,KAAK,CAACC,KAAjB;AAAA,CAAf,CAAnC;AAEP,OAAO,IAAME,OAAO,GAAGtB,aAAa,qBAE/BgB,MAAM,CAACO,IAAP,CAAYC,OAFmB,EAET,UAACL,KAAD,EAAQM,OAAR;AAAA,SACrBvB,OAAO,CAACiB,KAAD,EAAQ,UAACO,KAAD,EAAW;AACxBA,IAAAA,KAAK,CAACC,IAAN,GAAaF,OAAO,CAACG,OAArB;AACA,WAAOF,KAAP;AACD,GAHM,CADc;AAAA,CAFS,GAQlC;AAAEC,EAAAA,IAAI,EAAE;AAAR,CARkC,CAA7B;AAWP,OAAO,IAAME,WAAW,GAAGjB,KAAK,CAACI,MAAD,CAAzB;;AAEP,SAASc,UAAT,CAAoBL,OAApB,EAA6BM,MAA7B,EAAqC;AACnC,SAAON,OAAO,CAACO,IAAR,CACL5B,MAAM,CAACY,MAAM,CAACiB,MAAP,CAAcC,OAAf,CADD,EAEL5B,SAAS,CAAC,gBAAiB;AAAA,QAAdsB,OAAc,QAAdA,OAAc;AACzB,WAAOf,GAAG,CAACsB,KAAJ,CAAU,QAAV,EAAoBP,OAApB,EAA6BI,IAA7B,CACL1B,SAAS,CAAC,iBAAkB;AAAA,UAAf8B,QAAe,SAAfA,QAAe;AAC1BtB,MAAAA,YAAY,CAACuB,GAAb,CAAiBD,QAAQ,CAACT,IAA1B;AACA,aAAOpB,EAAE,CAACS,MAAM,CAACsB,YAAP,CAAoBF,QAAQ,CAACT,IAA7B,EAAmCH,OAApC,CAAT;AACD,KAHQ,CADJ,EAKLnB,UAAU,CAAC;AAAA,UAAG+B,QAAH,SAAGA,QAAH;AAAA,aAAkB7B,EAAE,CAACS,MAAM,CAACsB,YAAP,CAAoB3B,SAAS,CAACyB,QAAD,CAA7B,EAAyCG,KAA1C,CAApB;AAAA,KAAD,CALL,CAAP;AAOD,GARQ,CAFJ,CAAP;AAYD;;AAED,SAASC,QAAT,CAAkBf,OAAlB,EAA2B;AACzB,SAAOA,OAAO,CAACO,IAAR,CACL5B,MAAM,CAACY,MAAM,CAACO,IAAP,CAAYW,OAAb,CADD,EAEL5B,SAAS,CAAC,iBAAiB;AAAA,QAAdsB,OAAc,SAAdA,OAAc;AACzB,WAAOf,GAAG,CAAC4B,IAAJ,CAAS,QAAT,EAAmBT,IAAnB,CACL1B,SAAS,CAAC,iBAAkB;AAAA,UAAf8B,QAAe,SAAfA,QAAe;AAC1B,aAAO7B,EAAE,CAACS,MAAM,CAAC0B,UAAP,CAAkBN,QAAQ,CAACT,IAA3B,EAAiCH,OAAlC,CAAT;AACD,KAFQ,CADJ,EAILnB,UAAU,CAAC;AAAA,UAAG+B,QAAH,SAAGA,QAAH;AAAA,aAAkB7B,EAAE,CAACS,MAAM,CAAC0B,UAAP,CAAkB/B,SAAS,CAACyB,QAAD,CAA3B,EAAuCG,KAAxC,CAApB;AAAA,KAAD,CAJL,CAAP;AAMD,GAPQ,CAFJ,CAAP;AAWD;;AAED,SAASI,UAAT,CAAoBlB,OAApB,EAA6B;AAC3B,SAAOA,OAAO,CAACO,IAAR,CACL5B,MAAM,CAACY,MAAM,CAACO,IAAP,CAAYW,OAAb,CADD,EAEL5B,SAAS,CAAC,iBAAiB;AAAA,QAAdsB,OAAc,SAAdA,OAAc;AACzB,WAAOf,GAAG,CAACsB,KAAJ,CAAU,QAAV,EAAoBP,OAApB,EAA6BI,IAA7B,CACL1B,SAAS,CAAC,iBAAkB;AAAA,UAAf8B,QAAe,SAAfA,QAAe;AAC1B,aAAO7B,EAAE,CAACS,MAAM,CAAC0B,UAAP,CAAkBN,QAAQ,CAACT,IAA3B,EAAiCH,OAAlC,CAAT;AACD,KAFQ,CADJ,EAILnB,UAAU,CAAC;AAAA,UAAG+B,QAAH,SAAGA,QAAH;AAAA,aAAkB7B,EAAE,CAACS,MAAM,CAAC0B,UAAP,CAAkB/B,SAAS,CAACyB,QAAD,CAA3B,EAAuCG,KAAxC,CAApB;AAAA,KAAD,CAJL,CAAP;AAMD,GAPQ,CAFJ,CAAP;AAWD;;AAED,OAAO,IAAMK,IAAI,GAAGzC,YAAY,CAACqC,QAAD,EAAWV,UAAX,EAAuBa,UAAvB,CAAzB","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\nimport { produce } from 'immer';\nimport { combineEpics } from 'redux-observable';\nimport { ofType, catchError, switchMap, of } from 'storejars-react-toolkit/dist/operators';\nimport { Actions, entitiesMeta, entities, responder, metas } from 'storejars-react-toolkit';\n\nimport { api, tokenStorage } from '../helpers';\nimport namespaces from '../namespaces';\n\nexport const action = new Actions(namespaces.USERS);\n\nexport const selector = createSelector(entities, (state) => state.users);\nexport const metaSelector = createSelector(entitiesMeta, (state) => state.users);\n\nexport const reducer = handleActions(\n  {\n    [action.read.success]: (state, action$) =>\n      produce(state, (draft) => {\n        draft.data = action$.payload;\n        return draft;\n      }),\n  },\n  { data: [] },\n);\n\nexport const metaReducer = metas(action);\n\nfunction createEpic(action$, store$) {\n  return action$.pipe(\n    ofType(action.create.loading),\n    switchMap(({ payload }) => {\n      return api.post$('/users', payload).pipe(\n        switchMap(({ response }) => {\n          tokenStorage.set(response.data);\n          return of(action.createAction(response.data).success);\n        }),\n        catchError(({ response }) => of(action.createAction(responder(response)).error)),\n      );\n    }),\n  );\n}\n\nfunction readEpic(action$) {\n  return action$.pipe(\n    ofType(action.read.loading),\n    switchMap(({ payload }) => {\n      return api.get$('/users').pipe(\n        switchMap(({ response }) => {\n          return of(action.readAction(response.data).success);\n        }),\n        catchError(({ response }) => of(action.readAction(responder(response)).error)),\n      );\n    }),\n  );\n}\n\nfunction deleteEpic(action$) {\n  return action$.pipe(\n    ofType(action.read.loading),\n    switchMap(({ payload }) => {\n      return api.post$('/users', payload).pipe(\n        switchMap(({ response }) => {\n          return of(action.readAction(response.data).success);\n        }),\n        catchError(({ response }) => of(action.readAction(responder(response)).error)),\n      );\n    }),\n  );\n}\n\nexport const epic = combineEpics(readEpic, createEpic, deleteEpic);\n"]},"metadata":{},"sourceType":"module"}