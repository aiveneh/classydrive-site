{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { arrayFrom } from 'storejars-react-toolkit/dist/constants';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorParser } from 'storejars-react-toolkit';\nimport { TextInput } from '../../components';\nimport { selector as constantsSelector, action as constantsAction } from '../../redux/entities/constants';\nexport default function VehicleDetails(props) {\n  var years = arrayFrom(1990, 2021).reverse();\n  var constants = useSelector(function (state) {\n    return constantsSelector(state);\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(constantsAction.readAction({}).loading);\n  }, []);\n  var schema = Yup.object({\n    description: Yup.string().required(),\n    year: Yup.string().required(),\n    model: Yup.string().required(),\n    make: Yup.string().required()\n  });\n  return __jsx(\"div\", {\n    className: \"result-filter-wrapper min-height-400\"\n  }, __jsx(\"h3\", null, \"Vehicle Details\"), __jsx(\"div\", {\n    className: \"content\"\n  }, __jsx(Formik, {\n    initialValues: {\n      make: '',\n      model: '',\n      year: 0,\n      description: ''\n    },\n    validationSchema: schema,\n    onSubmit: function onSubmit(values) {\n      props.next(values);\n    }\n  }, function (props) {\n    var handleChange = props.handleChange,\n        values = props.values,\n        handleSubmit = props.handleSubmit,\n        errors = props.errors,\n        touched = props.touched;\n    return __jsx(\"form\", {\n      className: \"form-holder\",\n      onSubmit: handleSubmit\n    }, __jsx(\"div\", {\n      className: \"holder-item mb-20\"\n    }, __jsx(\"select\", {\n      className: \"form-control mb-0\",\n      name: \"make\",\n      value: values.make,\n      onChange: handleChange\n    }, __jsx(\"option\", {\n      value: \"\"\n    }, \"Vehicle Make\"), constants.VehicleMakeTypes.map(function (item) {\n      return __jsx(\"option\", {\n        key: item,\n        value: item\n      }, item);\n    }), __jsx(\"option\", {\n      value: \"Other\"\n    }, \"Other\"))), __jsx(TextInput, {\n      name: \"model\",\n      placeholder: \"Vehicle Model\",\n      value: values.model,\n      onChange: handleChange,\n      error: errorParser(errors, touched, 'model')\n    }), __jsx(\"div\", {\n      className: \"holder-item mb-20\"\n    }, __jsx(\"select\", {\n      required: true,\n      className: \"form-control mb-0\",\n      name: \"year\",\n      value: values.year,\n      onChange: handleChange\n    }, __jsx(\"option\", {\n      value: \"0\"\n    }, \"Year\"), years.map(function (item) {\n      return __jsx(\"option\", {\n        key: item,\n        value: item\n      }, item);\n    }))), __jsx(\"div\", {\n      className: \"holder-item mb-20\"\n    }, __jsx(\"div\", {\n      className: \"fancy-select\"\n    }, __jsx(\"textarea\", {\n      name: \"description\",\n      className: \"form-control mb-0\",\n      placeholder: \"Extra description\",\n      value: values.description,\n      onChange: handleChange\n    }))), __jsx(\"div\", {\n      className: \"mt-40\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-block next-btn\",\n      type: \"submit\"\n    }, \"Next\")));\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}