{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { handleActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\nimport { produce } from 'immer';\nimport { combineEpics } from 'redux-observable';\nimport { ofType, catchError, switchMap, of } from 'storejars-react-toolkit/dist/operators';\nimport { Actions, entitiesMeta, entities, responder, metas } from 'storejars-react-toolkit';\nimport { api, tokenStorage } from '../helpers';\nimport namespaces from '../namespaces';\nexport var action = new Actions(namespaces.AUTH);\nexport var selector = createSelector(entities, function (state) {\n  return state.auth;\n});\nexport var metaSelector = createSelector(entitiesMeta, function (state) {\n  return state.auth;\n});\nexport var reducer = handleActions(_defineProperty({}, action.create.success, function (state, action$) {\n  return produce(state, function (draft) {\n    draft = action$.payload;\n    return draft;\n  });\n}), {\n  token: ''\n});\nexport var metaReducer = metas(action); // login a vendor, customer or admin creates a token\n\nfunction createEpic(action$) {\n  return action$.pipe(ofType(action.create.loading), switchMap(function (_ref) {\n    var payload = _ref.payload;\n    return api.post$('/register', payload).pipe(switchMap(function (_ref2) {\n      var response = _ref2.response;\n      tokenStorage.set(response.data);\n      return of(action.createAction(response.data).success);\n    }), catchError(function (_ref3) {\n      var response = _ref3.response;\n      return of(action.createAction(responder(response)).error);\n    }));\n  }));\n} // email verirfication callback\n\n\nfunction readEpic(action$) {\n  return action$.pipe(ofType(action.read.loading), switchMap(function (_ref4) {\n    var payload = _ref4.payload;\n    return api.post$('/login', payload).pipe(switchMap(function (_ref5) {\n      var response = _ref5.response;\n      tokenStorage.set(response.data);\n      return of(action.readAction(response.data).success);\n    }), catchError(function (_ref6) {\n      var response = _ref6.response;\n      return of(action.readAction(responder(response)).error);\n    }));\n  }));\n}\n\nexport var epic = combineEpics(readEpic, createEpic);","map":{"version":3,"sources":["/Users/macbook/Documents/projects/classydrive/classydrive-web/site/src/redux/entities/auth.ts"],"names":["handleActions","createSelector","produce","combineEpics","ofType","catchError","switchMap","of","Actions","entitiesMeta","entities","responder","metas","api","tokenStorage","namespaces","action","AUTH","selector","state","auth","metaSelector","reducer","create","success","action$","draft","payload","token","metaReducer","createEpic","pipe","loading","post$","response","set","data","createAction","error","readEpic","read","readAction","epic"],"mappings":"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","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\nimport { produce } from 'immer';\nimport { combineEpics } from 'redux-observable';\nimport { ofType, catchError, switchMap, of } from 'storejars-react-toolkit/dist/operators';\nimport { Actions, entitiesMeta, entities, responder, metas } from 'storejars-react-toolkit';\n\nimport { api, tokenStorage } from '../helpers';\nimport namespaces from '../namespaces';\n\nexport const action = new Actions(namespaces.AUTH);\n\nexport const selector = createSelector(entities, (state) => state.auth);\nexport const metaSelector = createSelector(entitiesMeta, (state) => state.auth);\n\nexport const reducer = handleActions(\n  {\n    [action.create.success]: (state, action$) =>\n      produce(state, (draft) => {\n        draft = action$.payload;\n        return draft;\n      }),\n  },\n  { token: '' },\n);\n\nexport const metaReducer = metas(action);\n\n// login a vendor, customer or admin creates a token\nfunction createEpic(action$) {\n  return action$.pipe(\n    ofType(action.create.loading),\n    switchMap(({ payload }) => {\n      return api.post$('/register', payload).pipe(\n        switchMap(({ response }) => {\n          tokenStorage.set(response.data);\n          return of(action.createAction(response.data).success);\n        }),\n        catchError(({ response }) => of(action.createAction(responder(response)).error)),\n      );\n    }),\n  );\n}\n\n// email verirfication callback\nfunction readEpic(action$) {\n  return action$.pipe(\n    ofType(action.read.loading),\n    switchMap(({ payload }) => {\n      return api.post$('/login', payload).pipe(\n        switchMap(({ response }) => {\n          tokenStorage.set(response.data);\n          return of(action.readAction(response.data).success);\n        }),\n        catchError(({ response }) => of(action.readAction(responder(response)).error)),\n      );\n    }),\n  );\n}\n\nexport const epic = combineEpics(readEpic, createEpic);\n"]},"metadata":{},"sourceType":"module"}