{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/projects/classydrive/classydrive-web/site/src/forms/login.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorParser } from 'storejars-react-toolkit';\nimport { TextInput, PasswordInput, Button } from '../components';\nexport default function Login(props) {\n  var _this = this;\n\n  var isSubmitting = props.isSubmitting,\n      type = props.type,\n      handleSubmit = props.handleSubmit;\n  var schema = Yup.object({\n    password: Yup.string().required(),\n    email: Yup.string().email().required(),\n    type: Yup.string().required()\n  });\n  return __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      type: type\n    },\n    validationSchema: schema,\n    onSubmit: function onSubmit(values) {\n      return handleSubmit(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, function (props) {\n    var handleChange = props.handleChange,\n        values = props.values,\n        handleSubmit = props.handleSubmit,\n        errors = props.errors,\n        touched = props.touched;\n    return __jsx(\"form\", {\n      className: \"form-holder\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(TextInput, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: values.email,\n      onChange: handleChange,\n      error: errorParser(errors, touched, 'email'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), __jsx(PasswordInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      value: values.password,\n      onChange: handleChange,\n      error: errorParser(errors, touched, 'password'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      text: \"Login\",\n      isSubmitting: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })));\n  });\n}\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macbook/Documents/projects/classydrive/classydrive-web/site/src/forms/login.tsx"],"names":["React","Formik","Yup","errorParser","TextInput","PasswordInput","Button","Login","props","isSubmitting","type","handleSubmit","schema","object","password","string","required","email","values","handleChange","errors","touched"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,MAAnC,QAAiD,eAAjD;AAQA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA8B;AAAA;;AAC3C,MAAQC,YAAR,GAA6CD,KAA7C,CAAQC,YAAR;AAAA,MAAsBC,IAAtB,GAA6CF,KAA7C,CAAsBE,IAAtB;AAAA,MAA4BC,YAA5B,GAA6CH,KAA7C,CAA4BG,YAA5B;AAEA,MAAMC,MAAM,GAAGV,GAAG,CAACW,MAAJ,CAAW;AACxBC,IAAAA,QAAQ,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,EADc;AAExBC,IAAAA,KAAK,EAAEf,GAAG,CAACa,MAAJ,GAAaE,KAAb,GAAqBD,QAArB,EAFiB;AAGxBN,IAAAA,IAAI,EAAER,GAAG,CAACa,MAAJ,GAAaC,QAAb;AAHkB,GAAX,CAAf;AAMA,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaH,MAAAA,QAAQ,EAAE,EAAvB;AAA2BJ,MAAAA,IAAI,EAAJA;AAA3B,KADjB;AAEE,IAAA,gBAAgB,EAAEE,MAFpB;AAGE,IAAA,QAAQ,EAAE,kBAACM,MAAD;AAAA,aAAYP,YAAY,CAACO,MAAD,CAAxB;AAAA,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,UAACV,KAAD,EAAW;AACV,QAAQW,YAAR,GAAgEX,KAAhE,CAAQW,YAAR;AAAA,QAAsBD,MAAtB,GAAgEV,KAAhE,CAAsBU,MAAtB;AAAA,QAA8BP,YAA9B,GAAgEH,KAAhE,CAA8BG,YAA9B;AAAA,QAA4CS,MAA5C,GAAgEZ,KAAhE,CAA4CY,MAA5C;AAAA,QAAoDC,OAApD,GAAgEb,KAAhE,CAAoDa,OAApD;AAEA,WACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,QAAQ,EAAEV,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,WAAW,EAAC,OAHd;AAIE,MAAA,KAAK,EAAEO,MAAM,CAACD,KAJhB;AAKE,MAAA,QAAQ,EAAEE,YALZ;AAME,MAAA,KAAK,EAAEhB,WAAW,CAACiB,MAAD,EAASC,OAAT,EAAkB,OAAlB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,MAAC,aAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAEH,MAAM,CAACJ,QAHhB;AAIE,MAAA,QAAQ,EAAEK,YAJZ;AAKE,MAAA,KAAK,EAAEhB,WAAW,CAACiB,MAAD,EAASC,OAAT,EAAkB,UAAlB,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAkBE;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,YAAY,EAAEZ,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlBF,CADF;AAwBD,GAhCH,CADF;AAoCD;KA7CuBF,K","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorParser } from 'storejars-react-toolkit';\n\nimport { TextInput, PasswordInput, Button } from '../components';\n\ninterface IProps {\n  isSubmitting: boolean;\n  type: string;\n  handleSubmit: any;\n}\n\nexport default function Login(props: IProps) {\n  const { isSubmitting, type, handleSubmit } = props;\n\n  const schema = Yup.object({\n    password: Yup.string().required(),\n    email: Yup.string().email().required(),\n    type: Yup.string().required(),\n  });\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', type }}\n      validationSchema={schema}\n      onSubmit={(values) => handleSubmit(values)}\n    >\n      {(props) => {\n        const { handleChange, values, handleSubmit, errors, touched } = props;\n\n        return (\n          <form className=\"form-holder\" onSubmit={handleSubmit}>\n            <TextInput\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={values.email}\n              onChange={handleChange}\n              error={errorParser(errors, touched, 'email')}\n            />\n\n            <PasswordInput\n              name=\"password\"\n              placeholder=\"Password\"\n              value={values.password}\n              onChange={handleChange}\n              error={errorParser(errors, touched, 'password')}\n            />\n\n            <div className=\"\">\n              <Button text=\"Login\" isSubmitting={isSubmitting} />\n            </div>\n          </form>\n        );\n      }}\n    </Formik>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}