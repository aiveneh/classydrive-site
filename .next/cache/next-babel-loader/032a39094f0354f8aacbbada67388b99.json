{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrorLabel, Banner } from 'storejars-react-toolkit/dist/components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { windowExists, errorParser } from 'storejars-react-toolkit';\nimport { formatPrice } from '../helpers';\nimport { metaSelector, action } from '../redux/entities/enquiries';\nexport default function EnquiryModal(props) {\n  const {\n    image,\n    name,\n    price,\n    description,\n    condition,\n    mileage,\n    type,\n    itemId\n  } = props;\n  const ioRequest = useSelector(state => metaSelector(state).create);\n  const dispatch = useDispatch();\n  const {\n    success,\n    error,\n    loading\n  } = ioRequest;\n\n  const reset = () => dispatch(action.createAction({}).reset);\n\n  if (success) {\n    setTimeout(() => {\n      // TODO, this shoudl be a cline socde redirect\n      windowExists.location.reload();\n    }, 3000);\n  }\n\n  const schema = Yup.object({\n    message: Yup.string().required(),\n    email: Yup.string().email().required(),\n    phone: Yup.string().required(),\n    name: Yup.string().required()\n  });\n  return __jsx(\"div\", {\n    id: \"enquiryModal\",\n    className: \"modal border-transparent fade container-sm\",\n    tabIndex: -1,\n    \"data-replace\": \"true\",\n    \"aria-hidden\": \"true\",\n    style: {\n      display: 'none',\n      marginTop: '0px'\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      name: '',\n      phone: '',\n      email: '',\n      message: '',\n      type,\n      itemId\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      dispatch(action.createAction({}).reset);\n      dispatch(action.createAction(values).loading);\n    }\n  }, props => {\n    const {\n      handleChange,\n      values,\n      handleSubmit,\n      errors,\n      touched\n    } = props;\n    return __jsx(\"form\", {\n      className: \"modal-container\",\n      onSubmit: handleSubmit\n    }, error && __jsx(Banner.Error, {\n      message: error,\n      reset: reset\n    }), success && __jsx(Banner.Success, {\n      message: \"Enquiry sent successfully\",\n      reset: reset\n    }), __jsx(\"div\", {\n      className: \"modal-header\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-hidden\": \"true\"\n    }, \"\\xD7\")), __jsx(\"div\", {\n      className: \"modal-body\"\n    }, __jsx(\"div\", {\n      className: \"car-item-sm for-enquiry\"\n    }, __jsx(\"a\", {\n      href: \"#\"\n    }, __jsx(\"div\", {\n      className: \"image-bg\",\n      style: {\n        backgroundImage: `url(${image})`\n      }\n    }), __jsx(\"div\", {\n      className: \"content\"\n    }, __jsx(\"h5\", null, \" \", name), __jsx(\"div\", {\n      className: \"bottom\"\n    }, __jsx(\"ul\", {\n      className: \"car-meta clearfix\"\n    }, condition && __jsx(\"li\", {\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Car condition\",\n      \"data-original-title\": \"yeas: 2013\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-car\"\n    }), \"Condition - \", condition), mileage && __jsx(\"li\", {\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Car Mileage\",\n      \"data-original-title\": \"mile: 120000 KM\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-tachometer\"\n    }), \"Mileage - \", mileage)), __jsx(\"p\", {\n      className: \"price\"\n    }, formatPrice(price)))))), __jsx(\"p\", null, description), __jsx(\"div\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"form-group row gap-15\"\n    }, __jsx(\"label\", {\n      htmlFor: \"inputEmail1\",\n      className: \"col-sm-4 control-label\"\n    }, \"Name:\"), __jsx(\"div\", {\n      className: \"col-sm-8\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-0\",\n      name: \"name\",\n      onChange: handleChange,\n      value: values.name\n    }), __jsx(ErrorLabel, {\n      message: errorParser(errors, touched, 'name')\n    }))), __jsx(\"div\", {\n      className: \"form-group row gap-15\"\n    }, __jsx(\"label\", {\n      htmlFor: \"inputEmail2\",\n      className: \"col-sm-4 control-label\"\n    }, \"Phone Number:\"), __jsx(\"div\", {\n      className: \"col-sm-8\"\n    }, __jsx(\"input\", {\n      className: \"form-control mb-0\",\n      name: \"phone\",\n      onChange: handleChange,\n      value: values.phone\n    }), __jsx(ErrorLabel, {\n      message: errorParser(errors, touched, 'phone')\n    }))), __jsx(\"div\", {\n      className: \"form-group row gap-15\"\n    }, __jsx(\"label\", {\n      htmlFor: \"inputEmail3\",\n      className: \"col-sm-4 control-label\"\n    }, \"Email Address:\"), __jsx(\"div\", {\n      className: \"col-sm-8\"\n    }, __jsx(\"input\", {\n      type: \"email\",\n      className: \"form-control mb-0\",\n      name: \"email\",\n      onChange: handleChange,\n      value: values.email\n    }), __jsx(ErrorLabel, {\n      message: errorParser(errors, touched, 'email')\n    }))), __jsx(\"div\", {\n      className: \"form-group row gap-15\"\n    }, __jsx(\"label\", {\n      htmlFor: \"inputEmail3\",\n      className: \"col-sm-4 control-label\"\n    }, \"Message:\"), __jsx(\"div\", {\n      className: \"col-sm-8\"\n    }, __jsx(\"textarea\", {\n      className: \"form-control mb-0\",\n      rows: 5,\n      name: \"message\",\n      onChange: handleChange,\n      value: values.message\n    }), __jsx(ErrorLabel, {\n      message: errorParser(errors, touched, 'message')\n    }))))), __jsx(\"div\", {\n      className: \"modal-footer text-left\"\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      className: \"btn btn-sm btn-primary\"\n    }, loading ? 'Submitting...' : 'Submit')));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}