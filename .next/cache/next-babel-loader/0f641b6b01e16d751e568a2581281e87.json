{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { errorParser } from 'storejars-react-toolkit';\nimport { TextInput, PasswordInput, Button } from '../components';\nexport default function Login(props) {\n  var isSubmitting = props.isSubmitting,\n      type = props.type,\n      handleSubmit = props.handleSubmit;\n  var schema = Yup.object({\n    password: Yup.string().required(),\n    email: Yup.string().email().required(),\n    type: Yup.string().required()\n  });\n  return __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      type: type\n    },\n    validationSchema: schema,\n    onSubmit: function onSubmit(values) {\n      return handleSubmit(values);\n    }\n  }, function (props) {\n    var handleChange = props.handleChange,\n        values = props.values,\n        handleSubmit = props.handleSubmit,\n        errors = props.errors,\n        touched = props.touched;\n    return __jsx(\"form\", {\n      className: \"form-holder\",\n      onSubmit: handleSubmit\n    }, __jsx(TextInput, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: values.email,\n      onChange: handleChange,\n      error: errorParser(errors, touched, 'email')\n    }), __jsx(PasswordInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      value: values.password,\n      onChange: handleChange,\n      error: errorParser(errors, touched, 'password')\n    }), __jsx(\"div\", {\n      className: \"\"\n    }, __jsx(Button, {\n      text: \"Login\",\n      isSubmitting: isSubmitting\n    })));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}